<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/Revival created logo.png">
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/all.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    <title>Revival Abuja</title>
</head>
<body>



    <header>
        <div class="logo">
          <a href="/"> <abbr title="Revival Assembly"><img src="/images/Revival created logo.png" alt=""></abbr> </a>
        </div>
        <div class="ham">
           <abbr title="Open Hamburger"><img src="/images/hamburger-svgrepo-com (1).png" alt="" class="hamm"></abbr> 
        </div>
        <nav>
            <ul>
                <li><a class="onpage" href="/">Home</a></li>
                <li><a href="/Sermon">Sermons</a></li>
                <li><a href="/events">Events</a></li>
                <li><a href="/gallery">Gallery</a></li>
                <li><a href="/testimonies">Stories/Testimonies</a></li>
                <li><a href="/blog">Blog</a></li>
                <li><a href="/about">About</a></li>
                <li><a href="/contact">Contact</a></li>
            </ul>

            <div class="joinbtn">
                
            <button class="give">Give</button>
            </div>
        </nav>
    </header>






    <div class="giving">
        
        <form >

            <div class="close">
                <i class="fa fa-close"></i>
            </div>


            <label for="name">Full Name:</label>
            <input type="text" name="name" id="name" placeholder="fullname"><br>

            <label for="email">Email</label>
            <input type="email" name="email" id="email" placeholder="email"><br>

            <label for="phonenumber">Phone Number (optional)</label>
            <input type="text" name="phonenumber" id="number" placeholder="phone number"><br>

            <label for="amount">Amount</label>
            <input type="text" name="amount" id="amount" placeholder="Enter amount"><br>

            <label for="type">Giving Type</label>
            <select name="givingtype" id="type" onchange="changeBgColor()">
                <option value="empty">--select your giving type</option>
                <option value="offering">Offering</option>
                <option value="tithe">Tithe</option>
                <option value="seed"> Seed</option>
            </select> <br>

            <section class="thanks">
                <select name="choose" id="choose">
                    <option value="Empty">--To where</option>
                    <option value="S Pastor">Pastor</option>
                    <option value="orphange">Orphange</option>
                    <option value="widows">Widows</option>
                </select>
            </section>

            <div class="center">
                <button class="send" type="button" onclick="payWithPaystack()">Send</button>
            </div>
        </form>
    </div>

    






    <div class="update">
        <video src="/images/Fire Burning Hot Sparks Rising Background Free Video.mp4" autoplay muted loop></video>
        <div class="uptext">
              <div class="utext">
          <h2 class="eventtop">Azusa 26</h2>
          <p>Every year, we gather with one heart and one spirit at Azasa, a sacred time of refreshing, revival, and revelation. It's more than a program — it’s a divine appointment where lives are transformed, faith is reignited, and destinies are realigned in God’s presence.  
          Come expectant. Leave changed.</p>
          <p class="date">July 21, 2025, 07:00am</p>
    
          <div class="countdown">
            <section class="days">
              <h1 id="days">0</h1>
              <p>Days</p>
            </section>
            <section class="hours">
              <h1 id="hours">0</h1>
              <p>Hours</p>
            </section>
            <section class="minutes">
              <h1 id="minutes">0</h1>
              <p>Minutes</p>
            </section>
            <section class="seconds">
              <h1 id="seconds">0</h1>
              <p>Seconds</p>
            </section>
          </div>
    
          <div class="keep-date">
            <button
              class="keep"
              data-date="July 17, 2025"
              data-time="7:00am"
              data-title="Azusa 26"
              data-location="1-7, Revival Close, Off Cocoa Industrial Road, Cocoa Bus Stop Ogba Ikeja Ikeja, Lagos 100001"
            >
              Keep Date
            </button>
             <button class="closes">Close</button>
          </div>
        </div>
        </div>
      
      </div>



    <div class="main">
        <div class="over">
            <div class="d-t">
                <img src="/images/Revival created logo.png" alt="">
                <h2>Salvation is here join our community now</h2>
                <p>This is the place of hope, meaning and purpose. Visit, became a part of a bigger movement  that os changing lives</p>

                <a href="/contact"><button>Join Church</button></a>
            </div>
        </div>
    </div>

    <div class="up">
        <img src="/images/welcome re image.png" alt="">

        <div class="uptwo">
            <h1>Building a Vibrant, dynamic, spirit filled and properous Christain</h1>

        <p class="sab">Revival Assembly Abuja is a faith community that exists to share the Word of God and the salvation that is found only through Jesus. To walk alongside one another, through both their burdens and their joys. We exist for you. No matter where you’re at in life, at ACC, there’s a home for you here. </p>
        </div>
        
    </div>

    <!-- <div class="BS">
        <div class="text">
            <h1>Bible Study</h1>
            <p>Far far away or want to </p>
        </div>
        <div class="TB">
            <div class="time">
                <section class="days">
                    <h1>30</h1>
                    <p>Days</p>
                </section>
                <section class="hours">
                    <h1>6</h1>
                    <p>Hours</p>
                </section>
                <section class="minutes">
                    <h1>50</h1>
                    <p>Minutes</p>
                </section>
                <section class="seconds">
                    <h1>30</h1>
                    <p>Seconds</p>
                </section>
            </div>
            <div class="btn">
                <button>Events Details</button>
            </div>
        </div>
    </div> -->
    


    <div class="service">
        <div class="head">
            <h2 id="headp" class="headdp">Services</h2>
            <p class="boddyp">At Revival Assembly Abuja, our services have two unique expressions of worship, with the same, powerful, Bible-centric teaching.</p>
        </div>
        <div class="bodyt">
            <section class="serone">
                <p class="seheadd">Sunday Service</p>

                <img src="/images/choir re image2.png" alt="">

                <!-- <section class="btt">
                    <p>The Word</p>
                    <p>8:30am</p>
                </section> -->
            </section>

            <section class="serone">
                <p class="seheadd">Wednesday Service</p>

                <img src="/images/choir re image1.png" alt="">

                <!-- <section class="btt">
                    <p>Bible Study</p>
                    <p>8:30am</p>
                </section> -->
            </section>
        </div>

           
        
    </div>






    <div class="pictures">
<div class="ip">
        <% if (Pic && Pic.length > 0) { %>
            <% Pic.forEach(function (pic) { %>
                
                    <img src="<%= pic.image1 %>" alt="Image">
                
                
            <% }); %>
        </div>
        <% } else { %>
            <p class="nob">No Picture yet.</p>
        <% } %>
        

        <div class="bttn">
            <a href="/gallery"><button>see more</button></a> 
        </div>
    </div>



<div class="quotes">

    <p class="headdp">Quotes</p>

    <div class="slider-container">
        <button class="nav-btn left" aria-label="Slide Left"><i class="fas fa-chevron-left"></i></button>
        <div class="slider-wrapper">
          <div class="slider" id="slider">
            <% if (Quo && Quo.length > 0) { %>
              <% Quo.forEach(function (quo) { %>
                <img src="<%= quo.image1 %>" alt="Image">
              <% }); %>
              <!-- Duplicate images for seamless looping -->
              <% Quo.forEach(function (quo) { %>
                <img src="<%= quo.image1 %>" alt="Image">
              <% }); %>
            <% } %>
          </div>
        </div>
        <button class="nav-btn right" aria-label="Slide Right"><i class="fas fa-chevron-right"></i></button>
      </div>
    <div class="bttn">
        <a href="/gallery"><button>see more</button></a> 
    </div>

   
</div>
    
   





    <div class="upcoming">
        <h1 class="headdp">Upcoming</h1>

        <div class="d-upcome">
           

            <% if (event && event.length > 0) { %>
                <% event.forEach(function (event) { 
                    // Convert string date to a JS Date object
                    const fullDate = new Date(event.date);
                    const month = fullDate.toLocaleString('default', { month: 'short' }).toUpperCase(); // "JUN"
                    const day = fullDate.getDate(); // 12
                %>
            
                <div class="events">
                    <section style="background-image: url(<%= event.image1 %>);">
                        <div>
                            <p><%= month %></p>
                            <p class="num"><%= day %></p>
                        </div>
                    </section>
                    <p class="title"><%= event.etitle %></p>
                    <p class="day"><%= event.date %></p>
                    <p class="ab"><%= event.time %></p>
                </div>
            
                <% }); %>  
            <% } else { %>
                <p class="nob">No Event yet.</p>
            <% } %>
   
        </div>


    </div>






            <%- include("_footer") %>


     <script src="/js/giveo.js"></script>
    <script src="/js/all.js"></script>
   

     
    <script>
        // Close button functionality
        document.addEventListener("DOMContentLoaded", function () {
          const closeBtn = document.querySelector(".closes");
          const updateOverlay = document.querySelector(".update");
      
          if (closeBtn && updateOverlay) {
            closeBtn.addEventListener("click", () => {
              updateOverlay.style.display = "none";
            });
          }
        });
      </script>


<script>
    // Check if the popup has been shown today
    const lastPopupDate = localStorage.getItem("lastPopupDate");
    const today = new Date().toISOString().split('T')[0]; // Get current date in YYYY-MM-DD format
  
    if (lastPopupDate !== today) {
      // Show the popup if it has not been shown today
      setTimeout(() => {
        document.querySelector('.update').classList.add("active");
      }, 5000);
    }
  
    // Handle close button click
    document.querySelector('.closes').addEventListener('click', () => {
      // Close the popup
      document.querySelector('.update').style.display = 'none';
  
      // Set a flag in localStorage to prevent showing the popup again today
      localStorage.setItem("lastPopupDate", today);
    });
  
    // Countdown Timer
    const eventDatee = new Date("2025-07-21T07:00:00").getTime();
  
    const updateCountdownn = () => {
      const now = new Date().getTime();
      const diff = eventDatee - now;
  
      if (diff <= 0) return;
  
      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((diff % (1000 * 60)) / 1000);
  
      document.getElementById("days").textContent = days;
      document.getElementById("hours").textContent = hours;
      document.getElementById("minutes").textContent = minutes;
      document.getElementById("seconds").textContent = seconds;
    };
  
    setInterval(updateCountdownn, 1000);
    updateCountdownn();
  </script>
      
    <script>

        
        document.addEventListener('DOMContentLoaded', () => {
  const slider = document.getElementById('slider');
  const sliderContainer = document.querySelector('.slider-container');
  const images = slider.querySelectorAll('img');
  const imageWidth = images[0]?.offsetWidth + 15 || 315; // Width + margin
  let position = 0;
  let isHolding = false;
  let autoMoveInterval;
  const autoScrollSpeed = 1; // Pixels per frame
  const manualScrollSpeed = 5; // Pixels per frame for manual scroll
  const resumeDelay = 3000; // 3 seconds delay before resuming auto-scroll

  // Ensure there are images to slide
  if (images.length === 0) return;

  // Update slider position
  function updateSlider() {
    slider.style.transform = `translateX(${position}px)`;
  }

  // Seamless loop: Reset position when reaching the halfway point
  function handleLoop() {
    const halfWidth = (slider.scrollWidth / 2);
    if (Math.abs(position) >= halfWidth) {
      position = position < 0 ? 0 : -halfWidth;
      slider.style.transition = 'none'; // Disable transition for instant jump
      updateSlider();
      // Re-enable transition after a short delay
      setTimeout(() => {
        slider.style.transition = 'transform 0.3s ease';
      }, 0);
    }
  }

  // Auto-scroll function
  function startAutoMove() {
    clearInterval(autoMoveInterval);
    autoMoveInterval = setInterval(() => {
      if (!isHolding) {
        position -= autoScrollSpeed;
        updateSlider();
        handleLoop();
      }
    }, 16); // ~60fps
  }

  // Manual scroll function
  function startScrolling(direction) {
    clearInterval(autoMoveInterval); // Stop auto-scroll
    isHolding = true;

    function scroll() {
      if (!isHolding) return;
      position += direction * manualScrollSpeed;
      updateSlider();
      handleLoop();
      requestAnimationFrame(scroll);
    }

    scroll();
  }

  // Stop scrolling and resume auto-scroll after delay
  function stopScrolling() {
    isHolding = false;
    setTimeout(startAutoMove, resumeDelay);
  }

  // Event listeners for navigation buttons
  document.querySelector('.left').addEventListener('mousedown', () => startScrolling(1));
  document.querySelector('.right').addEventListener('mousedown', () => startScrolling(-1));
  window.addEventListener('mouseup', stopScrolling);
  window.addEventListener('mouseleave', stopScrolling);

  // Start auto-scroll on load
  startAutoMove();
});
    </script>

<script>
    // Countdown Timer
    const eventDate = new Date("2025-07-21T07:00:00").getTime();
  
    const updateCountdown = () => {
      const now = new Date().getTime();
      const diff = eventDate - now;
  
      if (diff <= 0) return;
  
      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((diff % (1000 * 60)) / 1000);
  
      document.getElementById("days").textContent = days;
      document.getElementById("hours").textContent = hours;
      document.getElementById("minutes").textContent = minutes;
      document.getElementById("seconds").textContent = seconds;
    };
  
    setInterval(updateCountdown, 1000);
    updateCountdown();
  
    // Google Calendar Add Button
    document.querySelectorAll('.keep').forEach(button => {
      button.addEventListener('click', function () {
        const rawDate = this.dataset.date;   // e.g., "July 17, 2025"
        const rawTime = this.dataset.time;   // e.g., "8:30am"
        const title = this.dataset.title;
        const location = this.dataset.location;
  
        if (!rawDate || !rawTime || !title || !location) {
          alert("Missing event details.");
          return;
        }
  
        // Combine date and time into ISO-like format: YYYY-MM-DDTHH:mm
        const parseDateTime = (dateStr, timeStr) => {
          const [monthStr, day, year] = dateStr.replace(',', '').split(' ');
          const months = {
            January: 0, February: 1, March: 2, April: 3, May: 4, June: 5,
            July: 6, August: 7, September: 8, October: 9, November: 10, December: 11
          };
  
          const month = months[monthStr];
          const dayNum = parseInt(day);
          const yearNum = parseInt(year);
  
          // Convert time to 24-hour
          const match = timeStr.match(/^(\d{1,2}):(\d{2})(am|pm)$/i);
          if (!match) return null;
  
          let [_, hour, minute, meridian] = match;
          hour = parseInt(hour);
          if (meridian.toLowerCase() === 'pm' && hour !== 12) hour += 12;
          if (meridian.toLowerCase() === 'am' && hour === 12) hour = 0;
  
          return new Date(yearNum, month, dayNum, hour, parseInt(minute));
        };
  
        const localStartDate = parseDateTime(rawDate, rawTime);
        if (!localStartDate || isNaN(localStartDate.getTime())) {
          alert("Invalid date or time format: " + rawDate + " " + rawTime);
          return;
        }
  
        const formatDate = (date) => {
          const pad = (n) => n.toString().padStart(2, '0');
          return `${date.getFullYear()}${pad(date.getMonth() + 1)}${pad(date.getDate())}T${pad(date.getHours())}${pad(date.getMinutes())}00`;
        };
  
        const start = formatDate(localStartDate);
        const end = formatDate(new Date(localStartDate.getTime() + 60 * 60 * 1000)); // +1 hour
  
        const calendarUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=${encodeURIComponent(title)}&location=${encodeURIComponent(location)}&dates=${start}/${end}`;
        
        window.open(calendarUrl, '_blank');
      });
    });
</script>


  


    <script src="https://js.paystack.co/v1/inline.js"></script>


</body>
</html>